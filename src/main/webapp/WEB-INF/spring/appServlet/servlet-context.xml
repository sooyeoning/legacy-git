<?xml version="1.0" encoding="UTF-8"?>
<!-- bean : 스프링 컨테이너가 생성하고 관리하는 자바 객체-->
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- web.xml에서 작성한 DispatcherServlet의 설정을 기록한 파일-->
	
	<!--
	@Controller에게 요청을 보내기 위해 필요한 / HandlerMapping, HandlerAdapter를 빈으로 등록한다
	ㄴ 근본적으로 @Controller 를 위해 필요한 태그
	 -->
	<annotation-driven />

	<!-- css, js, xml, image 등 정적 파일을 요구하는 것은 spring mvc에서 처리하지 않겠다   -->
	<!-- mapping 속성: 주소창에 mapping속성값(url) 요청시 리소스 파일(html, css, js, image) 응답해준다 -->
	<!-- location 속성: 리소스 파일이 있는 위치-->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- InternalResourceViewResolver: 기본(디폴트) 뷰 리졸버로 jsp를 뷰로 사용할때 쓰인다 -->
<!--	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
<!--		<beans:property name="prefix" value="/WEB-INF/views/" />-->
<!--		<beans:property name="suffix" value=".jsp" />-->
<!--		접두사+jsp(리턴하는 뷰 이름)+접미사 를 붙여서 jsp가 어디에 있는지 찾는다]-->
<!--	</beans:bean>-->

	<!--
	해당 패키지 내의 클래스를 스캔해서 @Component, @Controller, @Service, @Repository 확인 후 빈으로 등록
	<context:annotation-config> ApplicationContext에 등록된 빈의 @Autowired, @Qualifier를 해석해서 가져다 쓰겠다
	-->
	<context:component-scan base-package="kr.co.urbancode" />

</beans:beans>

<!--
참고
* HandlerMapping: 요청 url을 보고 어떤 컨트롤러가 처리할지 결정
* HandlerAdapter: HandlerMapping으로 찾은 컨트롤러의 실행 결과(요청을 처리한 결과: MV)를 리턴하는 역할
* Autowired
* Qualifier
?Bean을 생성하기 위해 xml 파일에 context:component-scan을 명시하면
 <mvc:annotation-driven/>태그를 포함하지 않아도 MVC 어플리케이션은 작동한다.

-->